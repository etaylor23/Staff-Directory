<!DOCTYPE html>
<html ng-app="staffDirectory">
<head>
	<title></title>
</head>
<body>

<style>
body {
	padding:0;
	margin:0;
}
.image img {
    height: 300px;
    max-width: 100%;
}
.profile-holder {
	background:rgba(0,0,0,0.75);
	position:absolute;
	width:100%;
	height:100%;
	top:0;
}
.profile-view {
    background:rgba(255,0,255,0.75);
    margin: 0 auto;
    padding: 30px;
    position: relative;
    top: 150px;
    width: 500px;
}
.fade {

}
</style>

<div ng-controller="staffSearch">
	<form>
		<label for="staff-search-field">Search for a member of staff:</label>
		<input ng-change="typing()" id="staff-search-field" type="text" ng-model="searchText">
		<div ng-bind="searchText"></div>
		<select>
			<option ng-repeat="dept in searchType">{{dept}}</option>
		</select>
		<div ng-bind="searchType"></div>
	</form>
	<div ng-repeat="results in searchResults">
		<img src="{{results.details.image}}"> <span>{{results.details.firstname}} {{results.details.surname}}</span>
	</div>
</div>

<div ng-controller="staff">
	<div>
		<h2>Your Department</h2>
		<ul>
			<li ng-repeat="deptMembers in department">
				<a href="#staff/{{deptMembers._id}}">{{deptMembers.details.firstname}} {{deptMembers.details.surname}}</a>
				</div>
			</li>
		</ul>
		<h2>Your Team</h2>
		<ul>
			<li ng-repeat="teamMembers in team">
				<a href="#staff/{{teamMembers._id}}">{{teamMembers.details.firstname}} {{teamMembers.details.surname}}</a>
				</div>
			</li>
		</ul>
	</div>


</div>


	<div ng-controller="showProfile">
		<div ng-view class="profile-holder"></div>
	</div>

	<div ng-controller="readWrite">
		<div ng-if="permissions === true">
			<input value="Toggle Mode" type="submit" ng-click="setReadWrite()">
			<div>{{$parent.readWrite}}</div>			
		</div>
		<div ng-if="permissions === false">
			<p>No access to write</p>
		</div>
	</div>


<div>
	<strong>Done: </strong>
	<ul>
		<li>Get names from db on page load</li>
		<li>Get other profile information relevant to staff member clicked</li>
		<li>Add lightbox styling to show profile</li>
		<li>Add/Remove Qualifications</li>
		<li>Create editing permissions dependent on user permissions
			<ul>
				<li>Create view for view only and another for read and write if access to edit - <strong>Bug - If admin leaves in write mode and user logs in, user can continue to write. Solution - Write to cookie username, if username === x and if write mode === true allow write, else allow read only, destroy cookie. On post/put if user type === admin allow write/otherwise fail</strong></li>
			</ul>
		</li>
	</ul>
	<strong>To Do Next: </strong>
	<ul>
		<li>Add permissions based views and components depending on access</li>
		<li>Add instant chat via socket.io</li>
	</ul>
</div>

<div>
	<ul>
		<li>$set</li>
		<li>$elemMatch</li>
		<li>$push</li>
		<li>$in</li>
		<li>$match</li>
		<li>$</li>
		<li>$gte/$lte</li>
		<li>$sort</li>
		<li>$group</li>
	</ul>
</div>

	<script type="text/javascript" src="libraries/jquery-2.1.1.js"></script>
	<script type="text/javascript" src="libraries/angular.js"></script>
	<script src="node_modules/angular-route/angular-route.js"></script>
	<script type="text/javascript" src="libraries/angular-cookies.js"></script>
	<script type="text/javascript" src="js/app.js"></script>

</body>
</html>